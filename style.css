* {
  font-family: Arial, Helvetica, sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

.modal {
  /* This way it could be display flex or grid or whatever also. */
  display: block;

  /* Probably need media queries here */
  width: 600px;
  max-width: 100%;

  height: 400px;
  max-height: 100%;

  position: fixed;

  z-index: 100;

  left: 50%;
  top: 50%;

  /* Use this for centering if unknown width/height */
  transform: translate(-50%, -50%);

  /* If known, negative margins are probably better (less chance of blurry text). */
  /* margin: -200px 0 0 -200px; */

  background: white;
  box-shadow: 0 0 60px 10px rgba(0, 0, 0, 0.9);
}
.closed {
  display: none;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 50;

  background: rgba(0, 0, 0, 0.6);
}
.modal-guts {
  display: flex;
  justify-content: center;
  flex-direction: column;

  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  padding: 20px 50px 20px 20px;
}

.modal h1{
  font-size: 3em;
  margin-bottom: 1.5em;
  text-align: center;
}

button {
  border: 0;
  background: black;
  color: white;
  padding: 5px 10px;
  font-size: 1.3rem;
}


.title {
  font-size: 3em;
  text-align: center;
  margin-bottom: 0.1em;
}

.input {
  display: flex;
  justify-content: space-around;
  margin-bottom: 2em;
}

.conteiner {
  max-width: 80vw;
  margin: 0 auto;
}

/*https://medium.com/cloudaper/how-to-create-a-flexible-square-grid-with-css-grid-layout-ea48baf038f3*/
.tic-tac-toe-grid {
  margin: 0 auto;
  max-width: 33vw;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 1fr;
}

.tic-tac-toe-grid::before {
  content: "";
  width: 0;
  padding-bottom: 100%;
  grid-row: 1 / 1;
  grid-column: 1 / 1;
}

.tic-tac-toe-grid > *:first-child {
  grid-row: 1 / 1;
  grid-column: 1 / 1;
}

.tic-tac-toe-grid div {
  border: 1px solid black;
}

.start-buttonDiv {
  text-align: center;
  margin-bottom: 1rem;
}
